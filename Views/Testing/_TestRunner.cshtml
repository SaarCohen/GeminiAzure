@model TestRunInfo

<style>
    .qq-upload-button {
        display: block;
        float: right;
        margin: 2px 0;
    }

    .qq-upload-drop-area {
        min-height: 20px;
    }

</style>

@if (Model.RunInfo.Count > 0)
{
    <div id="slider-header">
        <table class="width-100 properties">
            <tr>
                <td style="width:200px;">
                    <h3>@GetResource(ResourceKeys.Cases)</h3>
                </td>
                <td>
                    @Html.DropDownList("Case", new SelectList(Model.Cases, "BindingValue", "BindingText", Model.Info.CaseId.ToString()), new {@class="width-100"})
                </td>
            </tr><tr>
                     <td>
                         @GetResource(ResourceKeys.Attachments)
                     </td>
                     <td>
                         <div id="attachment" class="test-run-uploader">
               
                         </div>
                     </td>
                 </tr>
        </table>
    </div>

     <div class="clearfix">
        <ol id="steps">
            @{
        var pos = 0;
        foreach (var s in Model.RunInfo)
        {
            var current = s.CurrentStep ? "current" : string.Empty;
            var active = s.Active ? " active" : " inactive";
            var state = string.Format("status{0}", s.State);
            
                <li id='@string.Format("step-{0}", s.StepId)' title='@Html.Raw(s.Title)' class='@string.Format("{0} {1}{2}", state, current, active)' >
                    <a rel='@pos' href="javascript:void(0);">@(pos + 1)</a>
                </li>
            
            pos = pos + 1;
        }
            }
        </ol>
    </div>

    <div id="inner" class="clearfix">
        @foreach (var x in Model.RunInfo)
        {
            <div class='step' data-current='@string.Format("{0}", x.CurrentStep ? "true" : "false")' data-reset='@string.Format("{0}", x.AllowReset ? "true" : "false")' >
                <table class="width-100 properties">
                    <tr>
                        <td style="width:200px;">
                            @GetResource(ResourceKeys.Step)
                        </td>
                        <td>@Html.Raw(x.Description)</td>
                    </tr>
                    <tr>
                        <td class="no-wrap">
                            @GetResource(ResourceKeys.ExpectedResults)
                        </td>
                        <td>@Html.Raw(x.ExpectedResults)</td>
                    </tr>
                    <tr>
                        <td  class="no-wrap">
                            @GetResource(ResourceKeys.ActualResults)
                        </td>
                        <td>
                            <textarea style="width:99%" rows="10" id='actual-@(x.StepId)'>@Html.Raw(x.ActualResult)</textarea>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @GetResource(ResourceKeys.Attachments)
                        </td>
                        <td id="runner-attachment-container-@(x.StepId)">
                            @Html.Partial("~/Views/Testing/_Attachments.cshtml",x.Attachments)
                        </td>
                    </tr>
                </table>
            </div>
        }
        
    </div>
    <div class="clearfix runner-controls margin-top-20">
        <input id='run-reset' type='button' class='button button-disabled' value='@GetResource(ResourceKeys.Reset)' />
        <!-- needs a style for this -->
        <input id='run-pass' type='button' class='button button-passed' value='@GetResource(ResourceKeys.Pass)' />
        <!-- needs a style for this -->
        <input id='run-fail' type='button' class='button button-failed' value='@GetResource(ResourceKeys.Fail)' />
        <!-- needs a style for this -->
        <input id='run-fail-create' type='button' class='button button-primary' value='@GetResource(ResourceKeys.FailedCreateItem)' />
        <!-- needs a style for this -->
        @if(Model.RunInfo.Any(rs=>rs.State == 2))
        {
            <input id='run-fail-run' type='button' class='button button-primary' value='@GetResource(ResourceKeys.FailRun)' />
        }
        
    </div>
    
   
}