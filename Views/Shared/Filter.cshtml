@model ItemFilterModel

<div id="items-filter" class="clearfix">
    <ul class="filter-attribute">

        <li class="attribute">
            <div title="@GetResource(ResourceKeys.Options)" class="header options"><a>@GetResource(ResourceKeys.Options)</a></div>
            <div class="icon fonticon-arrow-down"></div>
            <div class="label">&nbsp;</div>
            <ul class="filter-data">
                <li>
                    @Html.DropDownListFor(x => x.StandardFilter, Model.StandardFilterValue,new { @class = "options-filter filter-changer input-size4 no-chosen", size="5" })
                </li>
                <li>
                    @Html.CheckBoxFor(m => m.IncludeClosedItems, new { @class = "options-filter filter-changer" })
                    @Html.HiddenFor(m => m.IncludeClosedItems)
                    @Html.LabelFor(m => m.IncludeClosedItems, GetResource(ResourceKeys.FilterIncludeClosed), new { title = string.Concat('+', GetResource(ResourceKeys.Closed)) })
                </li>
                <li>
                    @Html.CheckBoxFor(m => m.GroupDependencies, new { @class = "options-filter filter-changer" })
                    @Html.HiddenFor(m => m.GroupDependencies)
                    @Html.LabelFor(m => m.GroupDependencies, GetResource(ResourceKeys.GroupDependencies), new { title = GetResource(ResourceKeys.Grouped) })
                </li>
                <li>
                    @Html.CheckBoxFor(m => m.ShowSequenced, new { @class = "options-filter filter-changer" })
                    @Html.HiddenFor(m => m.ShowSequenced)
                    @Html.LabelFor(m => m.ShowSequenced, GetResource(ResourceKeys.ShowSequence), new { title = GetResource(ResourceKeys.ShowSequence) })
                </li>
            </ul>
        </li>
        
        @if (Request.Url.AbsoluteUri.Contains("/items", StringComparison.InvariantCultureIgnoreCase))
        {
            <li class="filter-general-option">
                <a id="clear-filter" href="@(GeminiContext.Url)project/@GeminiContext.Project.Entity.Code/@GeminiContext.Project.Entity.Id/projects/clearfilter">@GetResource(ResourceKeys.Clear) » </a>
            </li>
        }

        <li class="attribute">
            <div title="@GetResource(ResourceKeys.Projects)" class="header"><a>@GetResource(ResourceKeys.Projects)</a></div>
            <div class="icon fonticon-arrow-down"></div>
            <div class="label">&nbsp;</div>
            <ul class="filter-data">
                @Html.EditorFor(x => Model.Projects, new { CssClass = "project-filter" })
            </ul>    
        </li>

        <div id='filter-project-specific'>
            @{Html.RenderPartial("FilterProject", Model);}
        </div>

        <div id='filter-rest'>
            @{Html.RenderPartial("FilterNotProject", Model);}
        </div>
            
    </ul>
    @Html.HiddenFor(x => x.Sort)    
</div>


