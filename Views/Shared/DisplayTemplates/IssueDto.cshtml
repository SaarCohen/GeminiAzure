@model BaseIssuesModel
 
@if (Model == null || Model.Columns == null)
{
    <table id="tabledata" border="0" ></table>
}
else
{
    List<int> cardIds = new List<int>();
    bool showSequencing = false;
    bool allowSequencing = false;
    if (Model.CurrentPageCard.CardData.Badges.Count > 0)
    {
        var ids = Model.CurrentPageCard.CardData.Badges;
        foreach(var id in ids)
        {
            cardIds.Add(id);
        }
    }
    
    <table id="tabledata" border="0" >
    <thead>
        <tr>
        @foreach (var property in Model.Columns)
        {
            if (!string.IsNullOrWhiteSpace(property.field) || property.IsCustomField)
            {
                string id = property.IsCustomField ? string.Format("cf_{0}", property.CustomFieldId) : property.Attribute.ToString();
                if (property.sortable)
                {
                    if (property.sortDirection == -1)
                    {
            <th class="sortable desc @property.headerCssClass" data-id='@id' >@property.name</th>
                    }
                    else if (property.sortDirection == 1)
                    {
            <th class="sortable asc @property.headerCssClass" data-id='@id'>@property.name</th>
                    }
                    else
                    {
            <th class="sortable @property.headerCssClass" data-id='@id'>@property.name</th>
                    }
                }
                else
                {
            <th data-id='@id' class='align-left'>@property.name</th>
                }
            }
        }
        </tr>
    </thead>
    <tbody>
    @if (Model is ItemsGridModel)
    {
        var itemsModel = ((ItemsGridModel)Model);
        showSequencing = itemsModel.ShowSequencing;
        allowSequencing = itemsModel.AllowSequencing;
        foreach (var issue in itemsModel.SequencedIssues)
        {
            bool firstCol = true;
            var sequenceData = itemsModel.SequencedData[issue.Entity.Id];
            <tr id='tr-issue-@issue.Id' data-issue-id='@issue.Id' data-project-code='@issue.ProjectCode' data-project-id='@issue.Project.Id' class='sequenced-issue @ViewHelpers.HighlightIssueRow(issue, cardIds)'>
@foreach (var coldata in sequenceData)
{
<td class='@coldata.cssClass'>
@if (firstCol && itemsModel.ShowSequencing)
{
//firstCol = false;
if(allowSequencing)
{
<span class='dragHandle fonticon-drag-handle item-drag-handle-selected'></span>
}
else
{
<span class=''></span>
}
}
@Html.Raw(coldata.FormattedData)
@if (firstCol)
{
if (itemsModel.GroupDependencies && issue.Entity.IsParent && !issue.Entity.ParentIssueId.HasValue)
{
<span class='parent fonticon-arrow-down expander'></span>
}
firstCol = false;
}
</td>
}
</tr>
}
        if (showSequencing || itemsModel.SequencedIssues.Count > 0)
        {
            <tr class='drop-zone'>
            @foreach (var property in Model.Columns)
            {
                // Get the property
                if (!string.IsNullOrWhiteSpace(property.field) || property.IsCustomField)
                {
                    <td></td>
                }
            }
            </tr>
        }
    }
    
@foreach (var issue in Model.Issues)
{
bool firstCol = true;
<tr id='tr-issue-@issue.Id' data-issue-id='@issue.Id' data-project-code='@issue.ProjectCode' data-project-id='@issue.Project.Id' class='@ViewHelpers.HighlightIssueRow(issue, cardIds)'>
@{
var data = Model.DisplayData[issue.Entity.Id];
foreach (var coldata in data)
{
<td class='@coldata.cssClass'>
@if (firstCol && showSequencing)
{
if(allowSequencing)
{
<span class='dragHandle item-drag-handle fonticon-drag-handle'></span>
}
else
{
<span class=''></span>
}
}

@Html.Raw(coldata.FormattedData)
@if (firstCol)
{
if (Model.GroupDependencies && issue.Entity.IsParent && !issue.Entity.ParentIssueId.HasValue)
{
<span class='parent fonticon-arrow-down expander'></span>
}
firstCol = false;
}
</td>
}
}
</tr>
}
    </tbody>
    </table>
    <div id='comments' class='hide'></div>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#comments').click(function (e) { $(this).hide(); });
            $('.comments').click(function (e) {
               
                gemini_commons.stopClick(e);
                var parent = $(this).parent();
                var that = this;
                var pos = $(this).position();
                if ($('#comments').is(':visible')) {
                    $('#comments').hide();
                    return;
                }
                gemini_keyboard.bindEscape("#items-grid #comments", function (guid, selector) {
                    $(selector).hide();
                    gemini_keyboard.unbindEscape("#items-grid #comments");

                });
                $.ajax({
                    type: "GET",
                    url: csVars.Url + 'project/' + parent.data('project-code') + '/' + parent.data('project-id') + '/item/' + parent.data('issue-id') + '/comments',
                    success: function (response)
                    {
                        if (!response.success) return;
                        if (pos.left < 400)
                        {
                            $('#comments').html(response.Result.Data).show();
                            $("#comments").position({
                                "of": that,
                                "my": "left top",
                                "at": "center bottom",
                                "offset": "0 0",
                                "collision": "none"
                            });
                        }
                        else
                        {
                            $('#comments').html(response.Result.Data).show();
                                $("#comments").position({
                                    "of": that,
                                    "my": "right top",
                                    "at": "center bottom",
                                    "offset": "0 0",
                                    "collision": "none"
                          });
                        }
                    }
                });
            });
        });
    </script>
}

@if (IsAuthenticated)
{
    <ul id="item-grid-context-menu" class="cs-menu-context">
            <li><a href="#view">@GetResource(ResourceKeys.View)</a></li>
        <li><a href="#comment">@GetResource(ResourceKeys.Comment)</a></li>
        <li><a href="#edit">@GetResource(ResourceKeys.Edit)</a></li>
        <li class="separator"></li>
        <li ><a href="#pin">@GetResource(ResourceKeys.PinUnPin)</a></li>
        <li ><a href="#follow">@GetResource(ResourceKeys.FollowUnfollow)</a></li>
        <li class="separator"></li>
        <li class="highlight"><a href="#delete">@GetResource(ResourceKeys.Delete, Resourcing.Dotted)</a></li>
    </ul>
}
